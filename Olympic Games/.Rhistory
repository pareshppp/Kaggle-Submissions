g + geom_point(aes(color =  drv), size = 4, alpha = 0.5)
g + geom_point(aes(color =  drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color =  drv), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color =  drv)) + theme_bw(base_family = "Times")
library("swirl")
swirl()
plot(x = myx, y = myy, type = 'l', ylim = c(-3, 3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = year))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(facets = drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(facets = drv ~ cyl, margins = TRUE) + geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black')
g + geom_point() + facet_grid(facets = drv ~ cyl, margins = TRUE) + geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black') + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
library(swirl)
Paresh
swirl()
installed.packages("fields")
installed.packages("fields")
install.packages('fields')
swirl()
dist(dataFrame)
distxy
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = 'blue')
abline(h = 0.4, col = 'red')
5
12
abline(h = 0.05, col = 'green')
dist(dFsm)
hc
heatmap(x = dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
plot(x = cx, y = cy, col = c('red', 'orange', 'purple'), pch = 3, cex = 2, lwd = 2)
plot(x = cx, y = cy, col = c("red","orange","purple"), pch = 3, cex = 2, lwd = 2)
points(x = cx, y = cy, col = c('red', 'orange', 'purple'), pch = 3, cex = 2, lwd = 2)
mdist(x = x, y = y, cx = cx, cy = cy)
apply(X = distTmp, 2, FUN = which.min)
points(x = x, y = y, pch = 19, cex = 2, cols1[newClust])
points(x = x, y = y, pch = 19, cex = 2, col = cols1[newClust])
tapply(X = x, INDEX = newClust, FUN = mean())
tapply(X = x, INDEX = newClust, FUN = mean)
tapply(X = y, INDEX = newClust, FUN = mean)
points(x = newCx, y = newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x = x, y = y, cx = newCx, cy = newCy)
apply(X = distTmp2, 2, FUN = which.min)
points(x = x, y = y, pch = 19, cex = 2, cols1[newClust2])
points(x = x, y = y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(X = x, INDEX = newClust2, FUN = mean)
tapply(X = y, INDEX = newClust2, FUN = mean)
points(x = finalCx, y = finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
View(dataFrame)
kmeans(x = dataFrame, centers = 3)
kmObj$iter
plot(x = x, y = y, col = kmObj$cluster, pch = 19, cex = 2)
points(x = kmObj$centers, col = c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x = x, y = y, col = kmeans(x = dataFrame, centers = 6), pch = 19, cex = 2)
plot(x = x, y = y, col = kmeans(x = dataFrame, centers = 6)$cluster, pch = 19, cex = 2)
plot(x = x, y = y, col = kmeans(x = dataFrame, centers = 6)$cluster, pch = 19, cex = 2)
plot(x = x, y = y, col = kmeans(x = dataFrame, centers = 6)$cluster, pch = 19, cex = 2)
version
install.packages(c("assertthat", "chron", "colorspace", "curl", "data.table", "DBI", "digest", "fields", "ggplot2", "jsonlite", "openssl", "R6", "Rcpp", "readr", "stringi", "stringr", "swirl", "tibble", "tidyr", "yaml"))
install.packages('rattle')
install.packages('rattle')
install.packages('rattle')
install.packages('RGtk2')
version
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
# Adding replacing country code by name
s.olympics <- summer %>%
rename(Code = Country) %>%
left_join(., dictionary, by = 'Code')
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(n(Medal))
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(n_groups(Medal))
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(n_distinct(Medal))
View(top10.countries)
top10.countries <- s.olympics %>%
group_by(Country)
summarise(Medal, n())
top10.countries <- s.olympics %>%
group_by(Country)
summarise(n())
top10.countries <- s.olympics %>%
group_by(Country)
summarise(n = n())
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(n = n())
View(top10.countries)
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n())
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n()) %>%
head(10)
View(top10.countries)
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n()) %>%
arrange(desc(medal.count)) %>%
head(10)
View(top10.countries)
View(s.olympics)
summer <- tbl_df(summer)
tibble(summer)
View(summer)
glimpse(summer)
str(summer)
View(summer)
summer.na <- is.na(summer)
View(summer.na)
summer.na <- summer[is.na(summer)]
summer.na <- summer[is.na(summer), ]
View(summer.na)
summer.na <- summer[which(is.na(summer))]
View(summer.na)
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
summer <- tbl_df(summer)
colSums(is.na(summer))
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
summer <- tbl_df(summer)
colSums(is.na(summer))
s.olympics <- summer %>%
rename(Code = Country) %>%
left_join(., dictionary, by = 'Code')
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n()) %>%
arrange(desc(medal.count)) %>%
head(10)
View(top10.countries)
summer$Country[is.na(summer$Country)]
View(summer)
sum(is.na(summer$Country))
View(top10.countries)
top10.countries <- s.olympics %>%
group_by(Country)
View(top10.countries)
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n())
top10.countries <- s.olympics %>%
group_by(Country) %>%
summarise(medal.count = n())
top10.countries
colSums(is.na(s.olympics))
s.olympics <- tbl_df(summer) %>%
rename(Code = Country) %>%
left_join(., dictionary, by = 'Code')
colSums(is.na(colSums(is.na(summer))))
s.olympics <- tbl_df(summer) %>%
rename(Code = Country) %>%
left_join(., dictionary, by = 'Code')
colSums(is.na(s.olympics))
s.olympics[is.na(s.olympics$Country)]
s.olympics[,is.na(s.olympics$Country)]
s.olympics[is.na(s.olympics$Country), ]
s.olympics %>% select(Code, Country) %>%
filter(is.na(s.olympics$Country))
s.olympics %>% select(Code) %>%
distinct(Code) %>%
filter(is.na(s.olympics$Country))
s.olympics %>% select(Code) %>%
distinct(Code) %>%
filter(is.na(s.olympics$Country))
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
select(Code) %>%
distinct(Code)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
select(Code) %>%
distinct(Code) %>%
list()
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
select(Code) %>%
distinct(Code)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Country) %>%
mutate(n = n()) %>%
select(Code, n)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n)
colSums(is.na(s.olympics))
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n)
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
s.olympics <- tbl_df(summer) %>%
rename(Code = Country) %>%
left_join(., dictionary, by = 'Code')
colSums(is.na(s.olympics))
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
order_by(n)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
order_by(n, Code)
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
order_by(desc(n))
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
order_by(desc(n))
s.olympics %>% filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
arrange(desc(n))
s.olympics.na <- s.olympics %>%
filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
arrange(desc(n))
View(s.olympics.na)
s.olympics.na <- s.olympics %>%
filter(is.na(s.olympics$Country)) %>%
group_by(Code) %>%
mutate(n = n()) %>%
select(Code, n) %>%
distinct(Code, n) %>%
arrange(desc(n))
s.olympics.na
missing.country <- s.olympics.na$Code
setwd("~/Code/Data Science Projects/Kaggle-Submissions/Olympic Games")
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
missing.country <- read.csv('missing_codes.csv', stringsAsFactors = F)
country.data <- rbind(select(dictionary, Code, Country),
select(missing.country, Code, Country))
s.olympics <- tbl_df(summer) %>%
rename(Code = Country) %>%
left_join(., country.data, by = 'Code')
colSums(is.na(s.olympics))
s.olympics$Discipline <- plyr::mapvalues(s.olympics$Discipline,
c('Artistic G.', 'Wrestling Gre-R', 'Croquet',
'Wrestling Free.', 'Water polo', 'Water Motorspor',
'Modern Pentath.', 'Canoe / Kayak F', 'BMX',
'Canoe / Kayak S', 'Synchronized S.', 'Rhythmic G.',
'Beach volley.'),
c('Gymnastics Artistic', 'Wrestling Greco-Roman', 'Roque',
'Wrestling Freestyle', 'Water Polo', 'Water Motorsport',
'Modern Pentathlon', 'Canoe Sprint', 'Cycling BMX',
'Canoe Slalom', 'Synchronized Swimming', 'Gymnastics Rhythmic',
'Beach Volleyball'))
top10.countries <- s.olympics %>%
group_by(Country) %>%
mutate(medal.count = n()) %>%
select(Country, medal.count) %>%
distinct(Country, medal.count) %>%
arrange(desc(medal.count)) %>%
head(10)
# top10.countries
ggplot(data = top10.countries,
aes(x = reorder(Country, -medal.count), y = medal.count)) +
geom_bar(stat = 'identity', width = 0.5, fill = 'green4') +
geom_label(aes(label = medal.count), nudge_y = 500) +
labs(title = 'Top 10 Countries - Medal Count in Summer Olympics',
subtitle = '1986 - 2014') +
xlab('Country') +
ylab('Number of Medals') +
theme(axis.text.x = element_text(angle = 65, vjust = 0.7))
top20.athletes <- tbl_df(s.olympics) %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(20)
# top20.athletes
ggplot(top20.athletes,
mapping = aes(x = reorder(Athlete, medal.count),
y = medal.count,
fill = Discipline)) +
geom_bar(stat = 'identity', width = 0.8) +
geom_label(aes(label = medal.count), nudge_y = 1) +
coord_flip() +
labs(title = 'Greatest Olympians of All Time',
subtitle = 'Summer Olympics') +
ylab('Number of Individual Medals') +
xlab('Athlete')
top10.champions <- s.olympics %>%
filter(Medal = 'Gold') %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(10)
top10.champions <- s.olympics %>%
filter(Medal == 'Gold') %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(10)
top10.champions
top10.champions <- s.olympics %>%
filter(Medal == 'Gold') %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(10)
# top10.champions
ggplot(top10.champions,
mapping = aes(x = reorder(Athlete, medal.count),
y = medal.count,
fill = Discipline)) +
geom_bar(stat = 'identity', width = 0.8) +
geom_label(aes(label = medal.count), nudge_y = 1) +
coord_flip() +
labs(title = 'Most Dominant Champions of All Time',
subtitle = 'Summer Olympics') +
ylab('Number of Individual Gold Medals') +
xlab('Athlete')
top10.champions <- s.olympics %>%
filter(Medal == 'Gold') %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(10)
# top10.champions
ggplot(top10.champions,
mapping = aes(x = reorder(Athlete, medal.count),
y = medal.count,
fill = Discipline)) +
geom_bar(stat = 'identity', width = 0.8) +
geom_label(aes(label = medal.count), nudge_y = 1) +
coord_flip() +
labs(title = 'Most Dominant Champions of All Time',
subtitle = 'Summer Olympics') +
ylab('Number of Individual Gold Medals') +
xlab('Athlete')
unique(s.olympics$Sport)
library(readr)
library(dplyr)
library(ggplot2)
summer <- read.csv('summer.csv')
winter <- read.csv('winter.csv')
dictionary <- read.csv('dictionary.csv', stringsAsFactors = F)
missing.country <- read.csv('missing_codes.csv', stringsAsFactors = F)
country.data <- rbind(select(dictionary, Code, Country),
select(missing.country, Code, Country))
s.olympics <- tbl_df(summer) %>%
rename(Code = Country) %>%
left_join(., country.data, by = 'Code')
colSums(is.na(s.olympics))
s.olympics$Discipline <- plyr::mapvalues(s.olympics$Discipline,
c('Artistic G.', 'Wrestling Gre-R', 'Croquet',
'Wrestling Free.', 'Water polo', 'Water Motorspor',
'Modern Pentath.', 'Canoe / Kayak F', 'BMX',
'Canoe / Kayak S', 'Synchronized S.', 'Rhythmic G.',
'Beach volley.'),
c('Gymnastics Artistic', 'Wrestling Greco-Roman', 'Roque',
'Wrestling Freestyle', 'Water Polo', 'Water Motorsport',
'Modern Pentathlon', 'Canoe Sprint', 'Cycling BMX',
'Canoe Slalom', 'Synchronized Swimming', 'Gymnastics Rhythmic',
'Beach Volleyball'))
s.olympics$Sport <- plyr::mapvalues(s.olympics$Sport,
c('Croquet', 'Canoe / Kayak'),
c('Roque', 'Canoe'))
top10.countries <- s.olympics %>%
group_by(Country) %>%
mutate(medal.count = n()) %>%
select(Country, medal.count) %>%
distinct(Country, medal.count) %>%
arrange(desc(medal.count)) %>%
head(10)
# top10.countries
ggplot(data = top10.countries,
aes(x = reorder(Country, -medal.count), y = medal.count)) +
geom_bar(stat = 'identity', width = 0.5, fill = 'green4') +
geom_label(aes(label = medal.count), nudge_y = 500) +
labs(title = 'Top 10 Countries - Medal Count in Summer Olympics',
subtitle = '1986 - 2014') +
xlab('Country') +
ylab('Number of Medals') +
theme(axis.text.x = element_text(angle = 65, vjust = 0.7))
top20.athletes <- tbl_df(s.olympics) %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(20)
# top20.athletes
ggplot(top20.athletes,
mapping = aes(x = reorder(Athlete, medal.count),
y = medal.count,
fill = Discipline)) +
geom_bar(stat = 'identity', width = 0.8) +
geom_label(aes(label = medal.count), nudge_y = 1) +
coord_flip() +
labs(title = 'Greatest Olympians of All Time',
subtitle = 'Summer Olympics') +
ylab('Number of Individual Medals') +
xlab('Athlete')
top10.champions <- s.olympics %>%
filter(Medal == 'Gold') %>%
group_by(Athlete) %>%
mutate(medal.count = n()) %>%
select(Athlete, medal.count, Discipline) %>%
distinct(Athlete, medal.count, Discipline) %>%
arrange(desc(medal.count)) %>%
head(10)
# top10.champions
ggplot(top10.champions,
mapping = aes(x = reorder(Athlete, medal.count),
y = medal.count,
fill = Discipline)) +
geom_bar(stat = 'identity', width = 0.8) +
geom_label(aes(label = medal.count), nudge_y = 1) +
coord_flip() +
labs(title = 'Most Dominant Champions of All Time',
subtitle = 'Summer Olympics') +
ylab('Number of Individual Gold Medals') +
xlab('Athlete')
top3.sports <- s.olympics %>%
group_by(Sport) %>%
mutate(medal.count = n()) %>%
select(Sport, medal.count) %>%
distinct(Sport, medal.count) %>%
arrange(desc(medal.count))
View(top3.sports)
top5.sports <- s.olympics %>%
group_by(Sport) %>%
mutate(medal.count = n()) %>%
select(Sport, medal.count) %>%
distinct(Sport, medal.count) %>%
arrange(desc(medal.count)) %>%
head(5)
top5.sports
